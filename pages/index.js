import Head from 'next/head';
import { useRouter } from 'next/router';
import Numbers from '../components/Numbers/numbers';
import { useSelector } from 'react-redux';
import { number } from '../slices/numbers';

export default function Home({ data }) {
	const selector = useSelector(number);
	const addedId = selector.map((item) => item.id);
	const addedIds = addedId[0];
	const router = useRouter();

	const submitHandler = () => {
		router.push('/thanks');
	};
	return (
		<div>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="img/favicon-32x32.png" />
			</Head>
			<main className="w-full h-screen bg-bg-color flex justify-center items-center">
				{console.log(data)}
				<div role="section" className="w-[412px] h-[416px] bg-card-bg rounded-[30px] p-[32px]">
					<div className="w-[48px] h-[48px] bg-star-bg rounded-full flex justify-center items-center">
						<img src="img/icon-star.svg" alt="star" />
					</div>
					<div className="mt-[30px] mb-[15px] text-white text-[28px] font-bold font-Overpass">
						How did we do?
					</div>
					<div className="text-paragraph-font-color text-[15px] font-bold font-Overpass leading-6">
						Please let us know how we did with your support request. All feedback is appreciated to help us
						improve our offering!
					</div>
					<div className="flex justify-between mt-[24px] mb-[32px]">
						{Array.from(data).map((item) => (
							<Numbers name={item.name} key={item.id} id={item.id} addedId={addedIds} />
						))}
					</div>
					<button
						onClick={submitHandler}
						type="submit"
						className="bg-button-bg-hover w-full h-[45px] rounded-[22.5px] text-white font-Overpass font-bold tracking-[2px] hover:text-button-bg-hover hover:bg-white"
					>
						SUBMIT
					</button>
				</div>
			</main>
		</div>
	);
}
export async function getStaticProps() {
	const host = process.env.HOST;
	let data;
	let error = '';
	try {
		const res = await fetch(`${host}/api/numbers`, {
			method: 'GET',
			headers: {
				// update with your user-agent
				'User-Agent':
					'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
				Accept: 'application/json; charset=UTF-8'
			}
		});

		data = await res.json();
		console.log('data=======', data);
	} catch (e) {
		error = e.toString();
	}
	return {
		props: {
			data
		}
	};
}
